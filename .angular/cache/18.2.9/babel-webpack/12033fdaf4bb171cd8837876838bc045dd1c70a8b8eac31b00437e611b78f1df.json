{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../shared/services/login.service\";\nexport class AuthGuard {\n  constructor(router, loginService) {\n    this.router = router;\n    this.loginService = loginService;\n  }\n  canActivate() {\n    if (localStorage.currentUser) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.LoginService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","router","loginService","canActivate","localStorage","currentUser","i0","ɵɵinject","i1","Router","i2","LoginService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Francesco\\Desktop\\f-stream\\f-stream\\src\\app\\core\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Route, Router, RouterStateSnapshot, UrlSegment, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { IUser } from '../shared/models/user.model';\r\nimport { LoginService } from '../shared/services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard  {\r\n  login!:IUser;\r\n\r\n  constructor(private router:Router, private loginService:LoginService) {}\r\n  canActivate(): boolean {\r\n    if(localStorage.currentUser) {\r\n      return true\r\n    }else {\r\n      return false\r\n    }\r\n  }\r\n\r\n}\r\n\r\n//CanActivateChild, CanDeactivate<unknown>, CanLoad\r\n"],"mappings":";;;AASA,OAAM,MAAOA,SAAS;EAGpBC,YAAoBC,MAAa,EAAUC,YAAyB;IAAhD,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,YAAY,GAAZA,YAAY;EAAgB;EACvEC,WAAWA,CAAA;IACT,IAAGC,YAAY,CAACC,WAAW,EAAE;MAC3B,OAAO,IAAI;IACb,CAAC,MAAK;MACJ,OAAO,KAAK;IACd;EACF;;;uCAVWN,SAAS,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;IAAA;EAAA;;;aAATZ,SAAS;MAAAa,OAAA,EAATb,SAAS,CAAAc,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}