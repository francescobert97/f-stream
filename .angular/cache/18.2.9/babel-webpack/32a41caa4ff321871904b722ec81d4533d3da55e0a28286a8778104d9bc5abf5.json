{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { FILM } from 'src/app/shared/models/film-mock';\nimport * as i0 from \"@angular/core\";\nexport class TitlesStreamService {\n  constructor() {\n    this.Film = FILM;\n    this.titlesSearch = [];\n    this.observableFilm = new BehaviorSubject(this.Film);\n    this.filmObs$ = this.observableFilm.asObservable();\n    this.titlesSearchUpdate = new BehaviorSubject(this.titlesSearch);\n    this.searchBar$ = this.titlesSearchUpdate.asObservable();\n  }\n  getAll() {\n    return this.filmObs$;\n  }\n  getSearchBar(titles) {\n    this.titlesSearch = titles;\n  }\n  searchResults() {\n    this.titlesSearchUpdate.next(this.titlesSearch);\n  }\n  static {\n    this.ɵfac = function TitlesStreamService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TitlesStreamService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TitlesStreamService,\n      factory: TitlesStreamService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","FILM","TitlesStreamService","constructor","Film","titlesSearch","observableFilm","filmObs$","asObservable","titlesSearchUpdate","searchBar$","getAll","getSearchBar","titles","searchResults","next","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Francesco\\Desktop\\f-stream\\f-stream\\src\\app\\shared\\services\\titles-stream.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, observable, Subscriber } from 'rxjs';\r\nimport { FILM } from 'src/app/shared/models/film-mock';\r\nimport { IFilm } from 'src/app/shared/models/film.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TitlesStreamService {\r\n  public Film:IFilm[][] = FILM;\r\n  public titlesSearch:IFilm[] = [];\r\n  private observableFilm = new BehaviorSubject<IFilm[][]>(this.Film);\r\n  public filmObs$ = this.observableFilm.asObservable()\r\n  private titlesSearchUpdate =  new BehaviorSubject<IFilm[]>(this.titlesSearch);\r\n  searchBar$ = this.titlesSearchUpdate.asObservable()\r\n  constructor() { }\r\n\r\n  getAll() {\r\n    return this.filmObs$;\r\n  }\r\n\r\n  getSearchBar(titles:IFilm[]) {\r\n     this.titlesSearch =  titles;\r\n  }\r\n\r\n  searchResults() {\r\n    this.titlesSearchUpdate.next(this.titlesSearch);\r\n   \r\n  }\r\n\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAA4C,MAAM;AAC1E,SAASC,IAAI,QAAQ,iCAAiC;;AAKtD,OAAM,MAAOC,mBAAmB;EAO9BC,YAAA;IANO,KAAAC,IAAI,GAAaH,IAAI;IACrB,KAAAI,YAAY,GAAW,EAAE;IACxB,KAAAC,cAAc,GAAG,IAAIN,eAAe,CAAY,IAAI,CAACI,IAAI,CAAC;IAC3D,KAAAG,QAAQ,GAAG,IAAI,CAACD,cAAc,CAACE,YAAY,EAAE;IAC5C,KAAAC,kBAAkB,GAAI,IAAIT,eAAe,CAAU,IAAI,CAACK,YAAY,CAAC;IAC7E,KAAAK,UAAU,GAAG,IAAI,CAACD,kBAAkB,CAACD,YAAY,EAAE;EACnC;EAEhBG,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACJ,QAAQ;EACtB;EAEAK,YAAYA,CAACC,MAAc;IACxB,IAAI,CAACR,YAAY,GAAIQ,MAAM;EAC9B;EAEAC,aAAaA,CAAA;IACX,IAAI,CAACL,kBAAkB,CAACM,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC;EAEjD;;;uCApBWH,mBAAmB;IAAA;EAAA;;;aAAnBA,mBAAmB;MAAAc,OAAA,EAAnBd,mBAAmB,CAAAe,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}